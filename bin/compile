#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
. $BP_DIR/lib/common.sh

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

export_env_dir $ENV_DIR

JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
status_pending "Installing OpenJDK ${javaVersion}"
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
status_done

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR
mkdir -p $CACHE_DIR/.grails_cache
mkdir -p $CACHE_DIR/.grails_repo
mkdir -p $CACHE_DIR/.grails_agent
mkdir -p $HOME/.grails

echo "grails.dependency.cache.dir = '$CACHE_DIR/.grails_repo'" >> $HOME/.grails/settings.groovy
echo "grails.work.dir = '$CACHE_DIR/.grails_cache'" >> $HOME/.grails/settings.groovy
export GRAILS_AGENT_CACHE_DIR=$CACHE_DIR/.grails_agent

# change to build dir to run maven
cd $BUILD_DIR

status "Executing: grailsw"

$BUILD_DIR/grailsw refresh-dependencies | indent

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  error "Failed to build app with Maven
We're sorry this build is failing! If you can't find the issue in application code,
please submit a ticket so we can help: https://help.heroku.com/"
fi

$BUILD_DIR/grailsw build-standalone | indent

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  error "Failed to build app with Maven
We're sorry this build is failing! If you can't find the issue in application code,
please submit a ticket so we can help: https://help.heroku.com/"
fi
